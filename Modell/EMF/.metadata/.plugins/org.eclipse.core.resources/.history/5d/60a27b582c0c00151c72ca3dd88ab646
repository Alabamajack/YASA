/**
 */
package shootingmachineemfmodel;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Alarm</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link shootingmachineemfmodel.Alarm#getHasCounter <em>Has Counter</em>}</li>
 *   <li>{@link shootingmachineemfmodel.Alarm#getMINCYCLE <em>MINCYCLE</em>}</li>
 *   <li>{@link shootingmachineemfmodel.Alarm#getMAXALLOWEDVALUE <em>MAXALLOWEDVALUE</em>}</li>
 *   <li>{@link shootingmachineemfmodel.Alarm#getTICKSPERBASE <em>TICKSPERBASE</em>}</li>
 *   <li>{@link shootingmachineemfmodel.Alarm#isAUTOSTART <em>AUTOSTART</em>}</li>
 * </ul>
 * </p>
 *
 * @see shootingmachineemfmodel.ShootingmachineemfmodelPackage#getAlarm()
 * @model
 * @generated
 */
public interface Alarm extends Standardclass {
	/**
	 * Returns the value of the '<em><b>Has Counter</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>Has Counter</em>' containment reference isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Has Counter</em>' containment reference.
	 * @see #setHasCounter(Counter)
	 * @see shootingmachineemfmodel.ShootingmachineemfmodelPackage#getAlarm_HasCounter()
	 * @model containment="true" required="true"
	 * @generated
	 */
	Counter getHasCounter();

	/**
	 * Sets the value of the '{@link shootingmachineemfmodel.Alarm#getHasCounter <em>Has Counter</em>}' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Has Counter</em>' containment reference.
	 * @see #getHasCounter()
	 * @generated
	 */
	void setHasCounter(Counter value);

	/**
	 * Returns the value of the '<em><b>MINCYCLE</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>MINCYCLE</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>MINCYCLE</em>' attribute.
	 * @see #setMINCYCLE(int)
	 * @see shootingmachineemfmodel.ShootingmachineemfmodelPackage#getAlarm_MINCYCLE()
	 * @model
	 * @generated
	 */
	int getMINCYCLE();

	/**
	 * Sets the value of the '{@link shootingmachineemfmodel.Alarm#getMINCYCLE <em>MINCYCLE</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>MINCYCLE</em>' attribute.
	 * @see #getMINCYCLE()
	 * @generated
	 */
	void setMINCYCLE(int value);

	/**
	 * Returns the value of the '<em><b>MAXALLOWEDVALUE</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>MAXALLOWEDVALUE</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>MAXALLOWEDVALUE</em>' attribute.
	 * @see #setMAXALLOWEDVALUE(int)
	 * @see shootingmachineemfmodel.ShootingmachineemfmodelPackage#getAlarm_MAXALLOWEDVALUE()
	 * @model
	 * @generated
	 */
	int getMAXALLOWEDVALUE();

	/**
	 * Sets the value of the '{@link shootingmachineemfmodel.Alarm#getMAXALLOWEDVALUE <em>MAXALLOWEDVALUE</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>MAXALLOWEDVALUE</em>' attribute.
	 * @see #getMAXALLOWEDVALUE()
	 * @generated
	 */
	void setMAXALLOWEDVALUE(int value);

	/**
	 * Returns the value of the '<em><b>TICKSPERBASE</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>TICKSPERBASE</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>TICKSPERBASE</em>' attribute.
	 * @see #setTICKSPERBASE(int)
	 * @see shootingmachineemfmodel.ShootingmachineemfmodelPackage#getAlarm_TICKSPERBASE()
	 * @model
	 * @generated
	 */
	int getTICKSPERBASE();

	/**
	 * Sets the value of the '{@link shootingmachineemfmodel.Alarm#getTICKSPERBASE <em>TICKSPERBASE</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>TICKSPERBASE</em>' attribute.
	 * @see #getTICKSPERBASE()
	 * @generated
	 */
	void setTICKSPERBASE(int value);

	/**
	 * Returns the value of the '<em><b>AUTOSTART</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of the '<em>AUTOSTART</em>' attribute isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>AUTOSTART</em>' attribute.
	 * @see #setAUTOSTART(boolean)
	 * @see shootingmachineemfmodel.ShootingmachineemfmodelPackage#getAlarm_AUTOSTART()
	 * @model
	 * @generated
	 */
	boolean isAUTOSTART();

	/**
	 * Sets the value of the '{@link shootingmachineemfmodel.Alarm#isAUTOSTART <em>AUTOSTART</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>AUTOSTART</em>' attribute.
	 * @see #isAUTOSTART()
	 * @generated
	 */
	void setAUTOSTART(boolean value);

} // Alarm
